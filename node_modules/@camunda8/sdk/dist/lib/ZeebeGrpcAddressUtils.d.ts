/**
 * Utilities for handling ZEEBE_GRPC_ADDRESS configuration and protocol-based TLS inference
 */
/**
 * Validates the ZEEBE_GRPC_ADDRESS format and extracts protocol information
 */
export interface ZeebeGrpcAddressInfo {
    /** The original address including protocol */
    fullAddress: string;
    /** The address without protocol (host:port) */
    hostPort: string;
    /** Whether TLS should be used based on protocol */
    isSecure: boolean;
    /** The protocol used (grpc or grpcs) */
    protocol: 'grpc' | 'grpcs';
}
/**
 * Parses and validates a ZEEBE_GRPC_ADDRESS value
 * @param address The ZEEBE_GRPC_ADDRESS value to parse
 * @returns Parsed address information
 * @throws Error if the address format is invalid
 */
export declare function parseZeebeGrpcAddress(address: string): ZeebeGrpcAddressInfo;
/**
 * Emits warnings for deprecated configuration values
 */
export declare function emitDeprecationWarnings(config: {
    ZEEBE_ADDRESS?: string;
    ZEEBE_GRPC_ADDRESS?: string;
    CAMUNDA_SECURE_CONNECTION?: boolean;
    zeebeGrpcSettings: {
        ZEEBE_INSECURE_CONNECTION?: boolean;
    };
}): void;
/**
 * Emits warnings when ZEEBE_GRPC_ADDRESS conflicts with legacy settings
 */
export declare function emitConflictWarnings(config: {
    ZEEBE_ADDRESS?: string;
    ZEEBE_GRPC_ADDRESS?: string;
    CAMUNDA_SECURE_CONNECTION?: boolean;
    zeebeGrpcSettings: {
        ZEEBE_INSECURE_CONNECTION?: boolean;
    };
}): void;
